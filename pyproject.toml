[project]
name = "dataeval"
dynamic = ["version"]
description = "DataEval provides a simple interface to characterize image data and its impact on model performance across classification and object-detection tasks"
authors = [
  { name = "Andrew Weng", email = "andrew.weng@ariacoustics.com" },
  { name = "Bill Peria", email = "bill.peria@ariacoustics.com" },
  { name = "Jon Botts", email = "jonathan.botts@ariacoustics.com" },
  { name = "Jonathan Christian", email = "jonathan.christian@ariacoustics.com" },
  { name = "Justin McMillan", email = "justin.mcmillan@ariacoustics.com" },
  { name = "Ryan Wood", email = "ryan.wood@ariacoustics.com" },
  { name = "Scott Swan", email = "scott.swan@ariacoustics.com" },
  { name = "Shaun Jullens", email = "shaun.jullens@ariacoustics.com" },
]
requires-python = ">=3.10,<3.13"
readme = "README.md"
license = "MIT"
maintainers = [
  { name = "ARiA", email = "dataeval@ariacoustics.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Operating System :: OS Independent",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Scientific/Engineering",
]
dependencies = [
  "fast_hdbscan==0.2.0",
  "lightgbm>=4",
  "numba>=0.59.1",
  "numpy>=1.24.2",
  "pandas>=2.0",
  "polars>=1.0.0",
  "scipy>=1.10",
  "scikit-learn>=1.5.0",
  "torch>=2.2.0",
  "torchvision>=0.17.0",
  "tqdm>=4.66",
  "typing-extensions>=4.12",
  "xxhash>=3.3",
]

[project.optional-dependencies]
cpu = [
  "torch>=2.2.0",
  "torchvision>=0.17.0",
]
cu118 = [
  "torch>=2.2.0",
  "torchvision>=0.17.0",
]
cu126 = [
  "torch>=2.2.0",
  "torchvision>=0.17.0",
]
all = ["matplotlib>=3.7.1"]

[project.urls]
Homepage = "https://dataeval.ai/"
Repository = "https://github.com/aria-ml/dataeval/"
Documentation = "https://dataeval.readthedocs.io/"

[dependency-groups]
base = [
  "nox[uv]>=2025.5.1",
  "uv>=0.7.8",
  "pip>=25",
]
lint = [
  "ruff>=0.11",
  "codespell[toml]>=2.3",
]
test = [
  "coverage[toml]>=7.6",
  "pytest>=8.3",
  "pytest-cov>=6.1",
  "pytest-xdist>=3.6.1",
  "maite-datasets>=0.0.2",
]
type = [
  "pyright[nodejs]>=1.1.400",
]
docs = [
  "numpy>=2.0.2",
  "certifi>=2024.07.04",
  "ipykernel>=6.26.0",
  "ipywidgets>=8.1.1",
  "jinja2>=3.1.6",
  "jupyter-client>=8.6.0",
  "jupyter-cache>=1.0",
  "maite-datasets>=0.0.2",
  "myst-nb>=1.0",
  "sphinx-autoapi>=3.6.0",
  "sphinx-design>=0.6.1",
  "sphinx-immaterial>=0.12.5",
  "sphinx-new-tab-link>=0.8.0",
  "sphinx-tabs>=3.4.7",
  "Sphinx>=7.2.6",
  "torchmetrics>=1.0.0",
  "markupsafe>=3,<3.0.2",
]
dev = [
  { include-group = "base" },
  { include-group = "lint" },
  { include-group = "test" },
  { include-group = "type" },
  { include-group = "docs" },
]

[tool.uv]
conflicts = [
  [
    { extra = "cpu" },
    { extra = "cu118" },
    { extra = "cu126" },
  ],
]

[[tool.uv.index]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
explicit = true

[[tool.uv.index]]
name = "pytorch-cu118"
url = "https://download.pytorch.org/whl/cu118"
explicit = true

[[tool.uv.index]]
name = "pytorch-cu126"
url = "https://download.pytorch.org/whl/cu126"
explicit = true

[tool.uv.sources]
torch = [
  { index = "pytorch-cpu", extra = "cpu" },
  { index = "pytorch-cu118", extra = "cu118" },
  { index = "pytorch-cu126", extra = "cu126" },
]
torchvision = [
  { index = "pytorch-cpu", extra = "cpu" },
  { index = "pytorch-cu118", extra = "cu118" },
  { index = "pytorch-cu126", extra = "cu126" },
]

[tool.hatch.build.targets.sdist]
include = ["src/dataeval"]

[tool.hatch.build.targets.wheel]
include = ["src/dataeval"]

[tool.hatch.build.targets.wheel.sources]
"src/dataeval" = "dataeval"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "src/dataeval/_version.py"

[tool.poetry]
version = "0.0.0"  # unused

[tool.pyproject2conda.dependencies]
torch = { pip = true }
torchvision = { pip = true }
xxhash = { skip = true, packages = "python-xxhash>=3.3" }

[tool.pyright]
reportMissingImports = false

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = [
  "--pythonwarnings=ignore::DeprecationWarning",
  "--verbose",
  "--durations=20",
  "--durations-min=1.0",
]
markers = [
  "required: marks tests for required features",
  "optional: marks tests for optional features",
  "requires_all: marks tests that require matplotlib",
  "cuda: marks tests that require cuda",
  "year: marks tests that need a specified dataset year",
]

[tool.coverage.run]
source = ["src/dataeval"]
branch = true
concurrency = ["multiprocessing"]
parallel = true
omit = ["src/dataeval/_version.py"]

[tool.coverage.report]
exclude_also = [
  "raise NotImplementedError",
  ": \\.\\.\\.",
  "if TYPE_CHECKING:"
]
include = ["*/src/dataeval/*"]
omit = [
  "*/torch/_blocks.py",
  "*/_clusterer.py",
  "*/_fast_mst.py",
]
fail_under = 90

[tool.ruff]
exclude = [
  ".devcontainer",
  ".github",
  ".vscode",
  ".jupyter_cache",
  "*env*",
  "output",
  "build",
  ".nox",
  ".tox",
]
line-length = 120
indent-width = 4
target-version = "py310"
extend-include = ["*.ipynb"]

[tool.ruff.lint]
select = ["A", "ANN", "C4", "C90", "E", "F", "I", "NPY", "S", "SIM", "RET", "RUF100", "UP"]
ignore = ["ANN401", "NPY002"]
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
per-file-ignores = { "*.ipynb" = ["E402"],  "!src/*" = ["ANN", "S", "RET"]}

[tool.ruff.lint.isort]
known-first-party = ["dataeval"]

[tool.ruff.lint.flake8-builtins]
builtins-strict-checking = false

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"

[tool.codespell]
skip = './*env*,./output,./docs/build,./docs/source/.jupyter_cache,CHANGELOG.md,uv.lock,requirements.txt,*.html,./docs/source/*/data'
ignore-words-list = ["Hart","FPR"]

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"
