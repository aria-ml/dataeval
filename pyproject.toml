[tool.poetry]
name = "dataeval"
version = "0.0.0" # dynamic
description = "DataEval provides a simple interface to characterize image data and its impact on model performance across classification and object-detection tasks"
license = "MIT"
readme = "README.md"
homepage = "https://dataeval.ai/"
repository = "https://github.com/aria-ml/dataeval/"
documentation = "https://dataeval.readthedocs.io/"

authors = [
  "Andrew Weng <andrew.weng@ariacoustics.com>",
  "James Gleeson <james.gleeson@ariacoustics.com>",
  "Jon Botts <jonathan.botts@ariacoustics.com>",
  "Max Bright <max.bright@ariacoustics.com>",
  "Ryan Wood <ryan.wood@ariacoustics.com>",
  "Scott Swan <scott.swan@ariacoustics.com>",
  "Shaun Jullens <shaun.jullens@ariacoustics.com>",
  "Thayer Fisher <thayer.fisher@ariacoustics.com>",
]
maintainers = [
  "ARiA <dataeval@ariacoustics.com>"
]

classifiers = [
  "Development Status :: 4 - Beta",
  "Operating System :: OS Independent",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Topic :: Scientific/Engineering",
]

packages = [
  {include = "dataeval", from = "src"}
]

[tool.poetry.dependencies]
# required
python = ">=3.9,<3.12"
hdbscan = {version = ">=0.8.36"}
numpy = {version = ">1.24.3"}
pillow = {version = ">=10.3.0"}
scipy = {version = ">=1.10"}
scikit-learn = {version = ">=1.5.0"}
xxhash = {version = ">=3.3"}

# optional
matplotlib = {version = "*", optional = true}
nvidia-cudnn-cu11 = {version = ">=8.6.0.163", optional = true}
tensorflow = {version = ">=2.14.1, <2.16", optional = true}
tensorflow-io-gcs-filesystem = {version = ">=0.35.0, <0.37", optional = true}
tensorflow_probability = {version = ">=0.22.1, <0.24", optional = true}
torch = {version = ">=2.0.1, !=2.2.0", source = "pytorch", optional = true}
torchvision = {version = ">=0.16.0", source = "pytorch", optional = true}

[tool.poetry.extras]
tensorflow = ["tensorflow", "tensorflow-io-gcs-filesystem", "tensorflow_probability", "nvidia-cudnn-cu11"]
torch = ["torch", "torchvision", "matplotlib", "nvidia-cudnn-cu11"]
all = ["matplotlib", "nvidia-cudnn-cu11", "tensorflow", "tensorflow-io-gcs-filesystem", "tensorflow_probability", "torch", "torchvision"]

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
tox = {version = "*"}
tox-uv = {version = "*"}
uv = {version = "*"}
poetry = {version = "*"}
poetry-lock-groups-plugin = {version = "*"}
# lint
ruff = {version = "*"}
codespell = {version = "*", extras = ["toml"]}
# unit
pytest = {version = "*"}
pytest-cov = {version = "*"}
pytest-xdist = {version = "*"}
coverage = {version = "*", extras = ["toml"]}
torchmetrics = {version = ">=1.0.0", source = "pytorch"}
# type
pyright = {version = "*", extras = ["nodejs"]}
# prototype
maite = {version = "*"}
pandas = {version = "*"}
seaborn = {version = "*"}
# docs
certifi = {version = ">=2024.07.04"}
enum_tools = {version = ">=0.12.0", extras = ["sphinx"]}
ipykernel = {version = ">=6.26.0"}
ipywidgets = {version = ">=8.1.1"}
jupyter-client = {version = ">=8.6.0"}
jupyter-cache = {version = "*"}
myst-nb = {version = ">=1.0.0"}
pydata-sphinx-theme = {version = ">=0.15.4"}
sphinx-design = {version = "*"}
sphinx-tabs = {version = "*"}
Sphinx = {version = ">=7.2.6"}

[[tool.poetry.source]]
name = "pytorch"
url = "https://download.pytorch.org/whl/cu118"
priority = "explicit"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
style = "semver"
pattern = "v(?P<base>\\d+\\.\\d+\\.\\d+)$"

[tool.poetry-dynamic-versioning.substitution]
files = ["src/dataeval/__init__.py"]

[tool.pyright]
reportMissingImports = false

[tool.pytest.ini_options]
norecursedirs = ["prototype"]
addopts = ["--pythonwarnings=ignore::DeprecationWarning", "--verbose", "--durations=20", "--durations-min=1.0"]

[tool.coverage.run]
source = ["src/dataeval", "src/dataeval/_internal"]
branch = true

[tool.coverage.report]
exclude_also = ["raise NotImplementedError"]
include = ["*/src/dataeval/*"]
omit = [
  "*/_internal/models/pytorch/blocks.py",
  "*/_internal/models/pytorch/utils.py",
  "*/_internal/models/tensorflow/pixelcnn.py",
]
fail_under = 90

# Ruff rules - https://docs.astral.sh/ruff/rules/
[tool.ruff]
exclude = [
  ".devcontainer",
  ".github",
  ".vscode",
  ".jupyter_cache",
  "*env*",
  "output",
  "_build",
  ".tox",
  "prototype",
]
line-length = 120
indent-width = 4
target-version = "py38"
extend-include = ["*.ipynb"]

[tool.ruff.lint]
select = ["A", "E", "F", "C4", "I", "UP", "NPY", "SIM", "RUF100"]
ignore = ["NPY002"]
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
per-file-ignores = { "*.ipynb" = ["E402"] }

[tool.ruff.lint.isort]
known-first-party = ["dataeval"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"

[tool.codespell]
skip = './*env*,./prototype,./output,./docs/_build,./docs/.jupyter_cache,CHANGELOG.md,poetry.lock,*.html'

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"
