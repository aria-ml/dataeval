[tool.poetry]
name = "daml"
version = "0.0.0" # dynamic
description = "DAML provides a simple interface to characterize image data and its impact on model performance across classification and object-detection tasks"
license = "MIT"
readme = "README.md"
homepage = "https://daml.ai/"
repository = "https://github.com/aria-ml/daml/"
documentation = "https://daml.readthedocs.io/"

authors = [
  "Andrew Weng <andrew.weng@ariacoustics.com>",
  "James Gleeson <james.gleeson@ariacoustics.com>",
  "Scott Swan <scott.swan@ariacoustics.com>",
  "Shaun Jullens <shaun.jullens@ariacoustics.com>",
  "Thayer Fisher <thayer.fisher@ariacoustics.com>",
]
maintainers = [
  "ARiA <daml@ariacoustics.com>"
]

classifiers = [
  "Development Status :: 4 - Beta",
  "Operating System :: OS Independent",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Topic :: Scientific/Engineering",
]

packages = [
  {include = "daml", from = "src"}
]

[tool.poetry.dependencies]
python = ">=3.8.1,<3.12"
hdbscan = {version = ">=0.8.36"}
maite = {version = "*", optional = true}
matplotlib = {version = "*", optional = true}
numpy = {version = ">=1.24.2, <2"}
nvidia-cudnn-cu11 = {version = ">=8.6.0.163", optional = true}
pillow = {version = ">=10.3.0"}
scipy = {version = ">=1.10" }
scikit-learn = {version = ">=1.2.1" }
tensorflow = [
  {version = "~2.13.1", python = "~3.8.1", optional = true},
  {version = ">=2.14.1,<2.16", python = ">=3.9,<3.12", optional = true},
]
tensorflow-io-gcs-filesystem = [
  {version = "~0.34.0", python = "~3.8.1", optional = true},
  {version = ">=0.35.0,<0.37", python = ">=3.9,<3.12", optional = true},
]
tensorflow_probability = [
  {version = "~0.21.0", python = "~3.8.1", optional = true},
  {version = ">=0.22.1,<0.24", python = ">=3.9,<3.12", optional = true},
]
torch = {version = ">=2.0.1, !=2.2.0", source = "pytorch", optional = true}
xxhash = {version = ">=3.3"}

[tool.poetry.extras]
maite = ["maite"]
tensorflow = ["tensorflow", "tensorflow-io-gcs-filesystem", "tensorflow_probability", "nvidia-cudnn-cu11"]
torch = ["torch", "matplotlib", "nvidia-cudnn-cu11"]
all = ["maite", "matplotlib", "nvidia-cudnn-cu11", "tensorflow", "tensorflow-io-gcs-filesystem", "tensorflow_probability", "torch"]

[tool.poetry.group.lint]
optional = true

[tool.poetry.group.lint.dependencies]
ruff = "*"
codespell = "*"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
# lint
ruff = {version = "*"}
codespell = {version = "*"}
# test
pytest = {version = "*"}
pytest-cov = {version = "*"}
pytest-xdist = {version = "*"}
coverage = {version = "*", extras = ["toml"]}
pyright = {version = "*, !=1.1.340"}
torchmetrics = {version = ">=1.0.0", source = "pytorch"}
matplotlib = {version = "*"}
# docs
enum_tools = {version = "0.12.0", extras = ["sphinx"], python = ">=3.9,<3.12"}
ipykernel = {version = "6.26.0", python = ">=3.9,<3.12"}
ipywidgets = {version = "8.1.1", python = ">=3.9,<3.12"}
jupyter-client = {version = "8.6.0", python = ">=3.9,<3.12"}
jupyter-cache = {version = "*", python = ">=3.9,<3.12"}
myst-nb = {version = "1.0.0", python = ">=3.9,<3.12"} 
sphinx-rtd-size = {version = "0.2.0", python = ">=3.9,<3.12"}
sphinx-rtd-theme = {version = "1.3.0", python = ">=3.9,<3.12"}
sphinx-design = {version = "*", python = ">=3.9,<3.12"}
sphinx-tabs = {version = "*", python = ">=3.9,<3.12"}
Sphinx = {version = "7.2.6", python = ">=3.9,<3.12"}
tensorflow-datasets = {version = "*", python = ">=3.9,<3.12"}
torchvision = {version = ">=0.16.0", source = "pytorch", python = ">=3.9,<3.12"}

[[tool.poetry.source]]
name = "pytorch"
url = "https://download.pytorch.org/whl/cu118"
priority = "explicit"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
style = "semver"
pattern = "v(?P<base>\\d+\\.\\d+\\.\\d+)$"

[tool.poetry-dynamic-versioning.substitution]
files = ["src/daml/__init__.py"]

[tool.pyright]
reportMissingImports = false

[tool.pytest.ini_options]
norecursedirs = ["prototype"]
addopts = ["--pythonwarnings=ignore::DeprecationWarning", "--verbose", "--durations=20", "--durations-min=1.0"]

[tool.coverage.run]
source = ["daml"]
branch = true

[tool.coverage.report]
exclude_also = [
    "raise NotImplementedError"
]
omit = [
  "*/_internal/models/tensorflow/pixelcnn.py",
  "*/_prototype/*",
  "/tmp/*",
  "tests/*"
]
fail_under = 90

# Ruff rules - https://docs.astral.sh/ruff/rules/
[tool.ruff]
exclude = [
  ".devcontainer",
  ".github",
  ".vscode",
  ".jupyter_cache",
  "*env*",
  "output",
  "_build",
]
line-length = 120
indent-width = 4
target-version = "py38"
extend-include = ["*.ipynb"]

[tool.ruff.lint]
select = ["A", "E", "F", "C4", "I", "UP", "NPY", "SIM", "RUF100"]
ignore = ["NPY002"]
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
per-file-ignores = { "*.ipynb" = ["E402"] }

[tool.ruff.lint.isort]
known-first-party = ["daml"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"

[tool.codespell]
skip = '*env*,prototype,docs/.jupyter_cache,CHANGELOG.md,poetry.lock,output,*.html'

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"
